AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Parameters:
  Stage:
    Type: String
    Default: dev

Globals:
  Function:
    Timeout: 180
    MemorySize: 10000
  Api:
    BinaryMediaTypes:
      - image/png
      - image/jpg
      - image/jpeg

Resources:
  InterquAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage

  VideoUploadStatemachine:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Properties:
      DefinitionUri: statemachine/InterviewVideoUpload.asl.json
      DefinitionSubstitutions:
        SplitVideoFunctionArn: !GetAtt SplitVideoFunction.Arn
        GetExpressionFunctionArn: !GetAtt ExpressionInferenceFunction.Arn
        GetSentimentFunctionArn: !GetAtt AudioSentimentInferenceFunction.Arn
        GPTAnalysisFunctionArn: !GetAtt GPTAnalysisFunction.Arn
        PublishMongoFunctionArn : !GetAtt PublishMongoFunction.Arn
        GetQuestionInfoFunctionArn : !GetAtt GetQuestionInfoFunction.Arn
        AudioTranscriptionFunctionArn : !GetAtt AudioTranscriptionFunction.Arn

      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref SplitVideoFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ExpressionInferenceFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref AudioSentimentInferenceFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GPTAnalysisFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref PublishMongoFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GetQuestionInfoFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref AudioTranscriptionFunction

  AudioSentimentInferenceFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      PackageType: Image
      Architectures:
        # - arm64
        - x86_64
      ReservedConcurrentExecutions: 1
      # Events:
      #   Inference:
      #     Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
      #     Properties:
      #       RestApiId: !Ref InterquAPI
      #       Path: /get_sentiment
      #       Method: get
      #       Auth:
      #         ApiKeyRequired: true
      Policies: AmazonS3ReadOnlyAccess
      Environment:
        Variables: # Environment variables
          NUMBA_CACHE_DIR: /tmp/
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./functions/get_sentiment
      DockerTag: python3.9-v1

  ExpressionInferenceFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      PackageType: Image
      Architectures:
        - x86_64
      ReservedConcurrentExecutions: 1
      Events:
        Inference:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref InterquAPI
            Path: /get_expression
            Method: get
            Auth:
              ApiKeyRequired: true
      Policies: AmazonS3ReadOnlyAccess
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./functions/get_expression
      DockerTag: python3.10-v1

  # VideoProcessFunction:
  #   Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
  #   Properties:
  #     CodeUri: functions/process_video/
  #     Handler: app.lambda_handler
  #     Runtime: python3.9
  #     Architectures:
  #       - x86_64
  #     Events:
  #       ProcessVideo:
  #         Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
  #         Properties:
  #           RestApiId: !Ref InterquAPI
  #           Path: /process_video
  #           Method: get
  #           Auth:
  #             ApiKeyRequired: true

  SplitVideoFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Architectures:
        - x86_64
      ReservedConcurrentExecutions: 1
      Events:
        Inference:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref InterquAPI
            Path: /split_video
            Method: get
            Auth:
              ApiKeyRequired: true

      Policies: AmazonS3FullAccess
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./functions/split_video
      DockerTag: python3.10-v1
      
  AudioTranscriptionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/get_transcript/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        getTranscript:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref InterquAPI
            Path: /transcript
            Method: get
            Auth:
              ApiKeyRequired: true
      Policies: 
        - AmazonS3FullAccess
        - AmazonTranscribeFullAccess

  # WhisperFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     CodeUri: functions/get_whisper/
  #     Handler: app.lambda_handler
  #     Runtime: python3.9
  #     Architectures:
  #       - x86_64
  #     Events:
  #       getTranscript:
  #         Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
  #         Properties:
  #           RestApiId: !Ref InterquAPI
  #           Path: /whisper
  #           Method: get
  #           Auth:
  #             ApiKeyRequired: true

  GetQuestionInfoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/get_question_info/
      Handler: app.lambda_handler
      Runtime: python3.9  
      Architectures:
        - x86_64
      Environment:
        Variables:
          MONGODB_URL: '{{resolve:ssm:/interqu/mongodb_url_2:1}}'
  
  PublishMongoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/publishDB/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Environment:
        Variables:
          MONGODB_URL: '{{resolve:ssm:/interqu/mongodb_url:1}}'

  GPTAnalysisFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/gpt/
      Handler: ChatGPTService.lambda_handler
      Runtime: python3.9
      Environment:
        Variables:
          OPENAI_API_KEY: '{{resolve:ssm:/interqu/openai_api_key:1}}'
      Architectures:
        - x86_64

  # Python layers
  FfmpegLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: layers/ffmpeg/
      CompatibleRuntimes:
        - python3.9
    # Metadata:
    #   BuildMethod: python3.9
  
  # trigger on upload
  S3EventInvokeStateMachineFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/s3_event_processor/
      Handler: event_processor.lambda_handler
      Runtime: python3.9
      Events:
        S3UploadEvent:
          Type: S3
          Properties:
            Bucket: !Ref VideoS3Bucket
            Events: s3:ObjectCreated:*
      Policies:
        - Statement:
          - Effect: Allow
            Action: ["s3:GetObject", "s3:HeadObject"]
            Resource: "*"
        - Statement:
          - Effect: Allow
            Action: "states:StartExecution"
            Resource: !GetAtt VideoUploadStatemachine.Arn
      Environment:
        Variables:
          STATEMACHINE_ARN: !GetAtt VideoUploadStatemachine.Arn

  # aws s3 buckets & configuration
  VideoS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: interqu-video
      PublicAccessBlockConfiguration:
        BlockPublicPolicy: false
        # RestrictPublicBuckets: false
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
            AllowedOrigins:
              - '*'
            ExposedHeaders:
              - Date
            Id: myCORSRuleId1
            MaxAge: 3600
  AudioS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: interqu-audio
      PublicAccessBlockConfiguration:
        BlockPublicPolicy: false
        # RestrictPublicBuckets: false
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
            AllowedOrigins:
              - '*'
            ExposedHeaders:
              - Date
            Id: myCORSRuleId2
            MaxAge: 3600
  ResumeS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: interqu-resumes
      PublicAccessBlockConfiguration:
        BlockPublicPolicy: false
        # RestrictPublicBuckets: false
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
            AllowedOrigins:
              - '*'
            ExposedHeaders:
              - Date
            Id: myCORSRuleId3
            MaxAge: 3600


  DynamoDBPostsTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: InterquVideoProcessTable
      AttributeDefinitions:
        - AttributeName: Connection_id
          AttributeType: S
        - AttributeName: Interview_id
          AttributeType: S
        # - AttributeName: Progress
        #   AttributeType: S
      KeySchema:
        - AttributeName: Connection_id
          KeyType: HASH
        - AttributeName: Interview_id
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 3
        WriteCapacityUnits: 3

  InterquGraphQLAPI:
    Type: AWS::Serverless::GraphQLApi
    Properties:
      SchemaUri: ./graphql/schema.graphql
      Auth:
        Type: AWS_IAM
      DataSources:
        DynamoDb:
          PostsDataSource:
            TableName: !Ref DynamoDBPostsTable
            TableArn: !GetAtt DynamoDBPostsTable.Arn
      Functions:
        listVideoProcessesFunction:
          Runtime:
            Name: APPSYNC_JS
            Version: "1.0.0"
          DataSource: PostsDataSource
          CodeUri: ./graphql/listVideoProcesses.js
        createVideoProcessingFunction:
          Runtime:
            Name: APPSYNC_JS
            Version: "1.0.0"
          DataSource: PostsDataSource
          CodeUri: ./graphql/createVideoProcessing.js
        updateVideoProcessingFunction:
          Runtime:
            Name: APPSYNC_JS
            Version: "1.0.0"
          DataSource: PostsDataSource
          CodeUri: ./graphql/updateVideoProcessing.js
        deleteVideoProcessingFunction:
          Runtime:
            Name: APPSYNC_JS
            Version: "1.0.0"
          DataSource: PostsDataSource
          CodeUri: ./graphql/deleteVideoProcessing.js
      
      Resolvers:
        Mutation:
          updateVideoProcessing:
            Runtime:
              Name: APPSYNC_JS
              Version: "1.0.0"
            Pipeline:
              - updateVideoProcessingFunction
          createVideoProcessing:
            Runtime:
              Name: APPSYNC_JS
              Version: "1.0.0"
            Pipeline:
              - createVideoProcessingFunction
          deleteVideoProcessing:
            Runtime:
              Name: APPSYNC_JS
              Version: "1.0.0"
            Pipeline:
              - deleteVideoProcessingFunction
        Query:
          listVideoProcesses:
              Runtime:
                Name: APPSYNC_JS
                Version: "1.0.0"
              Pipeline:
                - listVideoProcessesFunction

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  AudioSentimentInferenceFunction:
    Description: "API Gateway endpoint URL for Prod stage for Inference function"
    Value: !Sub "https://${InterquAPI}.execute-api.${AWS::Region}.amazonaws.com/Prod/get_sentiment/"
  InferenceFunction:
    Description: "Inference Lambda Function ARN"
    Value: !GetAtt AudioSentimentInferenceFunction.Arn
  InferenceFunctionIamRole:
    Description: "Implicit IAM Role created for Inference function"
    Value: !GetAtt AudioSentimentInferenceFunction.Arn
  VideoBucketName:
    Value: !Ref VideoS3Bucket
    Description: Amazon S3 bucket for storing video files with CORS enabled.
  AudioBucketName:
    Value: !Ref AudioS3Bucket
    Description: Amazon S3 bucket for storing audio files with CORS enabled.
  InterquGraphQLAPIEndpoint:
    Description: "AppSync GraphQL API for Video Processing"
    Value: !GetAtt InterquGraphQLAPI.GraphQLUrl
